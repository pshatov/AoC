# ---------------------------------------------------------------------------------------------------------------------
# 4.py
# ---------------------------------------------------------------------------------------------------------------------
# AoC '22
# ---------------------------------------------------------------------------------------------------------------------


# ---------------------------------------------------------------------------------------------------------------------
class SectionRange:

    # -----------------------------------------------------------------------------------------------------------------
    def __init__(self, section_ids: str) -> None:
        self.a, self.b = [int(t) for t in section_ids.split('-')]
    # -----------------------------------------------------------------------------------------------------------------

    # -----------------------------------------------------------------------------------------------------------------
    def fully_contains(self, section_range: 'SectionRange') -> bool:
        return self.a <= section_range.a and section_range.b <= self.b
    # -----------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------


# ---------------------------------------------------------------------------------------------------------------------
def main() -> None:

    sections_left = []
    sections_right = []

    with open('input.txt') as file:
        all_lines = [line for line in [line.strip() for line in file.readlines()] if line]

    for next_line in all_lines:
        left_part, right_part = next_line.split(',')
        sections_left.append(SectionRange(left_part))
        sections_right.append(SectionRange(right_part))

    num_fully_contained = 0
    for i in range(len(all_lines)):
        sl, sr = sections_left[i], sections_right[i]
        if sl.fully_contains(sr) or sr.fully_contains(sl):
            num_fully_contained += 1

    print("part 1: %d" % num_fully_contained)
# ---------------------------------------------------------------------------------------------------------------------


# ---------------------------------------------------------------------------------------------------------------------
if __name__ == '__main__':
    main()
# ---------------------------------------------------------------------------------------------------------------------


# ---------------------------------------------------------------------------------------------------------------------
# End of File
# ---------------------------------------------------------------------------------------------------------------------
